type Author {
  id: ID!
  books: [Book!]!
  name: String!
  country: String!
  register_by: User!
}

type Book {
  id: ID!
  description: String!
  price: Float!
  quantity: Int!
  register_by: User!
  title: String!
  writted_by: Author!
}

type User {
  id: ID!
  name: String
  email: String
  lastName: String
}

type Query {
  author(id: ID): [Author!]!
  book(id: ID): [Book!]!
  hello(name: String): String!
  user(id: ID): [User!]!
}

input createAuthorInput {
  name: String!
  country: String!
  register_by: ID!
}

input createBookInput {
  despcription: String
  price: Float!
  quantity: Int!
  register_by: ID!
  title: String!
  writted_by: ID
}

input createUserInput {
  name: String!
  email: String!
  lastName: String!
  password: String!
}

input updateAuthorInput {
  name: String
  country: String
  register_by: ID
}

input updateBookInput {
  despcription: String
  price: Float
  quantity: Int
  register_by: ID
  title: String
  writted_by: ID
}

input updateUserInput {
  name: String
  email: String
  lastName: String
  password: String
}

type Mutation {
  createAuthor(input: createAuthorInput!): Author!
  createBook(input: createBookInput!): Book!
  createUser(input: createUserInput!): User!
  deleteBook(id: ID!): Book!
  updateAuthor(id: ID!, input: updateAuthorInput!): Author!
  updateBook(id: ID!, input: updateBookInput!): Book!
  updateUser(id: ID!, input: updateUserInput!): User!
}
